<?xml version="1.0"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<?rfc tocappendix="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="3"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<?rfc comments="no" ?>
<?rfc inline="yes" ?>
<rfc category="exp" docName="draft-muks-dnsop-dns-squash-01" ipr="trust200902">

  <front>

    <title>DNS squash</title>

    <author fullname="Mukund Sivaraman" initials="M." surname="Sivaraman">
      <organization>Internet Systems Consortium</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>94063</code>
          <region>CA</region>
          <country>US</country>
        </postal>
        <email>muks@mukund.org</email>
        <uri>https://www.isc.org/</uri>
      </address>
    </author>

    <date/>

    <!-- Meta-data Declarations -->

    <area>Operations and Management Area</area>
    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- <keyword>dns</keyword> -->

    <abstract>
      <t>This document attempts to specify current DNS protocol in
      squashed form in a single document.</t>
    </abstract>

  </front>

  <middle>

    <section title="About this document">
      <t>Current DNS protocol is spread over several RFCs and drafts
      dating back to 1987 (beginning from <xref target="RFC1033" />,
      <xref target="RFC1034" />, <xref target="RFC1035" />). There is no
      structure and order to be found in the publication of these
      RFCs. The early DNS RFCs are insufficiently specified and some
      parts of intermediate RFCs are obsolete. The internet has changed
      significantly since 1987 and there are several security
      considerations when implementing public-facing DNS. Learning the
      DNS protocol pedantically for the purpose of implementing it is
      very very difficult, and navigating the RFCs without any
      consistent ordering or rationale is at best confusing to a
      newcomer.</t>

      <t>This document attempts to provide a single structured reference
      of the current "core" DNS protocol, squashing together the
      contents and errata of the various DNS RFCs and drafts. It also
      attempts to clarify DNS protocol where ambiguity exists.</t>

      <t>It is expected that implementors and anybody who is interested
      in protocol behavior will consult this document.</t>

      <t>Following the robustness principle ("Be conservative in
      what you do, be liberal in what you accept from others"), an
      implementation that follows the behavior in this document is
      expected to be compatible when talking with current
      implementations of DNS.</t>

      <t>As everything is described here, this document need not
      contain any normative references to older DNS RFCs and drafts, but
      for the sake of citation, the source of requirements (where
      applicable) is provided.</t>

      <t>This document does not attempt to describe aspects such as the
      history of DNS, operating system functions and API for DNS
      operations, DNS utilities, etc. It is meant to be a pedantic
      network protocol description only.</t>

      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
      "MAY", and "OPTIONAL" in this document are to be interpreted as
      described in BCP14 <xref target="RFC2119" /> <xref
      target="RFC8174" /> when, and only when, they appear in all
      capitals, as shown here.</t>
    </section>

    <section title="Introduction to DNS">
      <t>TBD.</t>
    </section>

    <section title="Data structure">
      <t>The domain name space is a tree data structure that maps DNS
      names to some resource data about that name. Each node and leaf in
      the tree corresponds to a key-value pair, where the key is a DNS
      name and the value is resource data (which may be empty). The tree
      is used to lookup resource data corresponding to a DNS name. The
      DNS makes no distinctions between the uses of the interior nodes
      and leaves, and this document uses the term "node" to refer to
      both.</t>

      <t>Each node stores a label, which MUST be 1 to 63 octets in
      length for all nodes except the root node for which the label MUST
      be empty.  Sibling nodes (sharing the same parent) MUST NOT have
      the same label, although the same label can be used for nodes
      which are not siblings.</t>

      <t>The DNS name of a node is the sequence of the labels on the
      path from the node to the root of the tree.</t>

      <t>A DNS name is printed as a concatenation left to right of the
      individual labels on the path from the node to the root, each
      label trailing with an ASCII period '.' character. Thus a complete
      printed DNS name ends with a period character. See (TBD: link to
      proper DNS name presentation formatting).</t>

      <t>In wire format, a DNS name is represented as a concatenation
      left to right of the individual labels on the path from the node
      to the root, where each label is represented starting with the
      label length as a single unsigned integer octet with values 0-63,
      and followed by the octets of the label itself. For example, the
      following octets represent a DNS name "example.org."  ("example"
      labelled node followed by "org" labelled node followed by root
      node):</t>

      <figure>
        <artwork>
{ 0x07, 'e', 'x', 'a', 'm', 'p', 'l', 'e', 0x03, 'o', 'r', 'g', 0x00 }
        </artwork>
      </figure>

      <t>The total number of octets that represent a DNS name in wire
      format (i.e., the sum of all label lengths and label octets) MUST
      NOT be larger than 255. This requirement, and the other
      requirement that a label be between 0 to 63 octets, limit the DNS
      names that may be represented in the domain name space. For
      example, a DNS name "example.org." is 13 octets long in wire
      format.</t>

      <t>The following figure shows a part of the current domain name
      space. Note that the tree is a very small subset of the actual
      name space.</t>

      <figure>
        <artwork>
                       &lt;empty-label&gt;
                             |
                             |
           +-----------------+------------------+
           |                 |                  |
          arpa              com                org
           |                 |                  |
           |                 |                  |
       +-----------+         |      +---------+--------+
       |           |         |      |         |        |
    in-addr       ip6        |   example  wikipedia   isc
                             |
 +--------+---------+--------+---------------+--------+
 |        |         |        |               |        |
reddit  apple    example     |             amazon    xkcd
                           google
                             |
                    +-----+-----+--------+
                    |     |     |        |
                   maps  www   mail  translate

        </artwork>
      </figure>

      <t>TBD: describe items in the tree</t>

      <t>The octets that make up a label may contain any 8-bit value. In
      DNS name comparisons, when the highest-order bit of an octet of a
      label is 0, the value of that octet for comparison purposes is
      assumed to be a 7-bit ASCII character and MUST be compared without
      character case-sensitivity (i.e., the corresponding operand of the
      octet comparison operator must be transformed to ASCII lowercase
      first and then compared). When the highest-order bit of an octet
      of a label is 1, it MUST be compared directly without any
      character case transformations.</t>

      <t>This means that tree operations are not case-sensitive, and a
      tree may contain a node with label "example", or a node with label
      "EXAMPLE", but not both as siblings (sharing the same parent). The
      node could be referred to either as "example", "EXAMPLE" or
      "ExAmPlE" as they all corespond to the same node.</t>

      <t>Nodes in the domain name space MUST preserve the character case
      of the octets of their corresonding labels as they are entered
      into the tree, even though tree operations are not
      case-sensitive. Label content MUST be stored as provided, as 8-bit
      octets without transformation.</t>

      <t>A domain in the DNS is identified by a DNS name, and consists
      of that part of the domain name space that is at and below the DNS
      name which identifies it. It is a subtree of the domain name
      space.</t>

      <t>A DNS name is a sub-domain of another DNS name if it is
      contained within the latter. This relationship can be tested by
      seeing if the sub-domain's DNS name ends with the containing DNS
      name.  For example, "sub.example.org." is a sub-domain of
      "example.org.", "org.", and "." (the root name).</t>

      <section title="Delegations">
	<t>TBD.</t>
      </section>
    </section>

    <section title="Service operation">
      <t>TBD.</t>
    </section>

    <section title="Wire Protocol">
      <section title="Message Overview">
        <t>All communications inside of the domain protocol are carried in a
        single format called a message. The top level format of message is
        divided into 5 sections (some of which are empty in certain cases)
        shown below:</t>

        <figure>
          <artwork>
+---------------------+
|        Header       |
+---------------------+
|       Question      | the question for the name server
+---------------------+
|        Answer       | RRs answering the question
+---------------------+
|      Authority      | RRs pointing toward an authority
+---------------------+
|      Additional     | RRs holding additional information
+---------------------+
          </artwork>
        </figure>

      <t>The header section is always present.  The header includes fields
      that specify which of the remaining sections are present, and also
      specify whether the message is a query or a response, a standard query
      or some other opcode, etc.</t>

      <t>The names of the sections after the header are derived from their
      use in standard queries.  The question section contains fields that
      describe a question to a name server.  These fields are a query type
      (QTYPE), a query class (QCLASS), and a query domain name (QNAME).
      The last three sections have the same format: a possibly empty list of
      concatenated resource records (RRs).  The answer section contains RRs
      that answer the question; the authority section contains RRs that
      point toward an authoritative name server; the additional records 
      section contains RRs which relate to the query, but are not strictly
      answers for the question.</t>
      </section>
      <section title="Header section format">
        <t>The header contains the following fields:</t>

        <figure>
          <artwork>
                                    1  1  1  1  1  1
      0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |                      ID                       |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |QR|   Opcode  |AA|TC|RD|RA|Z |AD|CD|   RCODE   |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |                    QDCOUNT                    |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |                    ANCOUNT                    |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |                    NSCOUNT                    |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |                    ARCOUNT                    |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
          </artwork>
        </figure>

        <t>which are defined as follows:
          <list hangIndent="10" style="hanging">
            <t hangText="ID">A 16 bit identifier assigned by the program that
            generates any kind of query.  This identifier is copied
            the corresponding reply and can be used by the requester
            to match up replies to outstanding queries.</t>

            <t hangText="QR">A one bit field that specifies whether this
            message is a query (0), or a response (1).</t>

            <t hangText="OPCODE">
              A four bit field that specifies kind of query in this message.
              This value is set by the originator of a query and copied into
              the response.  The values are:
              <list style="hanging">
                <t hangText="0">a standard query (QUERY)</t>
                <t hangText="1">an inverse query (IQUERY)</t>
                <t hangText="2"> a server status request (STATUS)</t>
                <t hangText="3">unassigned</t>

                <!-- RFC 1996 -->
                <t hangText="4">zone change notification (NOTIFY)</t>

                <!-- RFC 2136 -->
                <t hangText="5">dynamic update of zone information (UPDATE)</t>
                <t hangText="6-15">reserved for future use</t>
              </list>
            </t>

            <t hangText="AA">
              Authoritative Answer - this bit is valid in responses,
              and specifies that the responding name server is an
              authority for the domain name in question section.
            </t>

            <t>
              Note that the contents of the answer section may have
              multiple owner names because of aliases.  The AA bitcorresponds to the name which matches the query name, or
              the first owner name in the answer section.
            </t>

            <t hangText="TC">
              TrunCation - specifies that this message was truncated
              due to length greater than that permitted on the
              transmission channel.
            </t>

            <t hangText="RD">
              Recursion Desired - this bit may be set in a query and
              is copied into the response.  If RD is set, it directs
              the name server to pursue the query recursively.
              Recursive query support is optional.
            </t>

            <t hangText="RA">
              Recursion Available - this be is set or cleared in a
              response, and denotes whether recursive query support is
              available in the name server.
            </t>

            <t hangText="Z">
              Reversed for future use. Must be zero in all queries
              and responses.
            </t>

            <t hangText="AD">
              Authentic Data - the data in this query is signed and has been validated by the server. <xref target="RFC3655" />
            </t>

            <t hangText="CD">
              Checking Disabled - Indicates that DNSSEC signature checking is disabled for this message. <xref target="RFC2535" />
              <!-- need to figure out how to phrase this better. -->
            </t>
            <t hangText="RCODE">
              Response code - this 4 bit field is set as part of responses.
              Additional RCODES beyond 15 may be returned as part of the OPT field in an
              eDNS response. <xref target="RFC6895" /> Header-only RCODEs have the following meanings:

              <list style="hanging">
                <t hangText="0">No error condition</t>
                <t hangText="1">
                  Format error (FORMERR) - The name server was unable to
                  interpret the query.
                </t>
                <t hangText="2">
                  Server failure (SERVFAIL) - The name server was unable to
                  process this query due to a problem with the name server.
                </t>
                <t hangText="3">
                  Non-existent domain (NXDOMAIN) - Meaningful only for
                  responses from an authoritative name server, this code
                  signifies that the domain name referenced in the query does
                  not exist.
                </t>
                <t hangText="4">
                  Not Implemented - The name server does not support the
                  requested kind of query.
                </t>
                <t hangText="5">
                  Refused - The name server refuses to perform the specified
                  operation for policy reasons. For example, a name server
                  may not wish to provide the information to the particular
                  requester, or a name server may not wish to perform a
                  particular operation (e.g., zone transfer) for particular data.
                </t>
                <t hangText="6-15">
                  Reserved for future use
                </t>
              </list>
            </t>

            <t hangText="QDCOUNT">
              an unsigned 16 bit integer specifying the number of
              entries in the question section.
            </t>

            <t hangText="ANCOUNT">
              an unsigned 16 bit integer specifying the number of
              resource records in the answer section.
            </t>

            <t hangText="NSCOUNT">
              an unsigned 16 bit integer specifying the number of name
              server resource records in the authority records
              section.
            </t>

            <t hangText="ARCOUNT">
              an unsigned 16 bit integer specifying the number of
              resource records in the additional records section.
            </t>
          </list>
      </t>
      </section>
      <section title="DNS message authentication (TSIG)">
        <t>TBD.</t>
      </section>
    </section>

    <section title="Zone data provisioning">
      <section title="Master files">
	<t>TBD.</t>
      </section>
      <section title="Whole zone transfers (AXFR)">
	<t>TBD.</t>
      </section>
      <section title="Incremental zone transfers (IXFR)">
	<t>TBD.</t>
      </section>
      <section title="Updating zone data (DNS UPDATE)">
	<t>TBD.</t>
      </section>
      <section title="Zone change notifications (NOTIFY)">
	<t>TBD.</t>
      </section>
    </section>

    <section title="Acknowledgements">
      <t>TBD.</t>
    </section>

  </middle>

  <back>

    <references title="Normative references">
      <?rfc include="reference.RFC.1033.xml"?>
      <?rfc include="reference.RFC.1034.xml"?>
      <?rfc include="reference.RFC.1035.xml"?>
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.8174.xml"?>

      <!-- RCODEs + eDNS, 16 assignment error -->
      <?rfc include="reference.RFC.6895.xml"?>

      <!-- AD bit and CD bit defined here -->
      <?rfc include="reference.RFC.2535.xml"?>

      <!-- Current behavior of AD bit -->
      <?rfc include="reference.RFC.3655.xml"?>
    </references>

    <section title="ChangeLog">
      <t>
        <list style="symbols">

          <t>
          draft-muks-dnsop-dns-squash-01
          <vspace/>
          Add domain name space diagram and correct some mistakes.
          </t>

          <t>
          draft-muks-dnsop-dns-squash-00
          <vspace/>
          Initial draft.
          </t>

        </list>
      </t>
    </section>

  </back>
</rfc>
